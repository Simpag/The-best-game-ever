<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>font_size = 64; //Change this font size if you change the font.
scr_InitMenu();
scr_addClickables();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_select = mouse_check_button_pressed(mb_any);

//Selection of menu
if (key_select) {
    if (menuType == mainMenu) {
        switch(menuPage) {
            case 0: //Main menu
                if (menuSelected = 1) { //Start Game
                    scr_removeClickables();
                    menuPage = 1; //Move to the Start game page
                    scr_addClickables();
                }
                
                if (menuSelected = 2) { //Options
                    scr_removeClickables();
                    menuPage = 2; //Move to the Options page
                    scr_addClickables();
                }
                
                if (menuSelected = 3) { //Instructions
                    show_message("Instructions");
                }
                
                if (menuSelected = 4) { //Quit Game
                    game_end();
                }
            break; //End of main menu
    //End of case 0
    
            case 1: //Start Game Submenu
                if (menuSelected = 1) { //Save 1
                    show_message("Save 1");
                    room_goto_next(); 
              } //End of save 1
              
                if (menuSelected = 2) { //Save 2
                    show_message("Save 2"); 
                    room_goto_next(); 
              } //End of save 2
              
                if (menuSelected = 3) { //Go back
                    scr_removeClickables();
                    menuPage = 0; 
                    scr_addClickables();
              } //End of back
          break; //End of Start Game Submenu
    //End of case 1
    
            case 2: //Options Game Submenu
                if (menuSelected = 1) { //Volume
                    scr_removeClickables();
                    menuPage = 3; //Move to the Volume page
                    scr_addClickables();
              } //End of Master Volume
              
                if (menuSelected = 2) { //test
                    show_message("Test"); 
              } //End of Music Volume
              
                if (menuSelected = 3) { //Go back
                    scr_removeClickables();
                    menuPage = 0; 
                    scr_addClickables();
              } //End of back
          break; //End of Options Submenu
    //End of case 2
    
            case 3: //Volume Submenu
            scr_addClickables();
                if (menuSelected = 1) { //Go back
                    scr_removeClickables();
                    menuPage = 2; 
                    menuSelected = 1;
                    scr_addClickables();
              } //End of back
          break; //End of Options Submenu
    //End of case 3
          
        } //End of switch
    } //End of selection of menu

//ESC menu
if (menuType == escMenu) {
        switch(menuPage) {
            case 0: //Main menu
                if (menuSelected = 1) { //Continue Game
                    scr_removeClickables();
                    //insert pause script here
                }
                
                if (menuSelected = 2) { //Options
                    scr_removeClickables();
                    menuPage = 2; //Move to the Options page
                    scr_addClickables();
                }
                
                if (menuSelected = 3) { //Instructions
                    show_message("Instructions");
                }
                
                if (menuSelected = 4) { //Save &amp; Quit
                    //insert save script here
                    room_goto(rm_hub);
                }
            break; //End of main menu
    //End of case 0
    
            case 2: //Options Game Submenu
                if (menuSelected = 1) { //Volume
                    scr_removeClickables();
                    menuPage = 3; //Move to the Volume page
                    scr_addClickables();
              } //End of Master Volume
              
                if (menuSelected = 2) { //test
                    show_message("Test"); 
              } //End of Music Volume
              
                if (menuSelected = 3) { //Go back
                    scr_removeClickables();
                    menuPage = 0; 
                    scr_addClickables();
              } //End of back
          break; //End of Options Submenu
    //End of case 2
    
            case 3: //Volume Submenu
            scr_addClickables();
                if (menuSelected = 1) { //Go back
                    scr_removeClickables();
                    menuPage = 2; 
                    menuSelected = 1;
                    scr_addClickables();
              } //End of back
          break; //End of Options Submenu
    //End of case 3
          
        } //End of switch
    } //End of selection of menu
}

//Spawning the volume sliders
if (menuPage == 3) { 
    //Master volume
        if (!instance_exists(obj_master_volume)) instance_create(0,0,obj_master_volume);
    //End of Master volume
        
    //Music Volume
        if (!instance_exists(obj_music_volume)) instance_create(0,0,obj_music_volume);
    //End of Music Volume
    
    //Effects Volume
        if (!instance_exists(obj_effects_volume)) instance_create(0,0,obj_effects_volume);
    //End of effects Volume

} //End of spawning volume sliders
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_main_menu); 

for (i = 1; i &lt;= menuText[menuPage,0]; i+=1) { //Cycles through the menus, menuText[0] = 4 so it will stop at menu 4.
    if (menuSelected = i) {
        draw_set_color(c_red); //If selected draw red
    } else {   
       draw_set_color(c_black); //Else draw black
    }
    var divd;
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    if (menuText[menuPage,0] == 1) { divd = 2 } else { divd = menuText[menuPage,0] }
    draw_text(room_width/2, room_height/divd+(i*1.5*font_size), menuText[menuPage,i]); //Draws the menu text
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
