<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_InitMenu();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_down = keyboard_check_pressed(ord("S"));
key_up = keyboard_check_pressed(ord("W"));
key_select = keyboard_check_pressed(vk_space);

//Move in the menu
if (key_up) menuSelected -= 1; //Move up in menu
if (key_down) menuSelected += 1; //Move down in menu

if (menuSelected &lt; 1) { //If the menuSelected is less then one, if you press up at the first option, set the menu to the last option. So it wraps around.
    menuSelected = menuText[menuPage,0];
} else { 
    if (menuSelected &gt; menuText[menuPage,0]) { //Same as above but the other way round
        menuSelected = 1;
    }
}
//End of move in menu


//Selection of menu
if (key_select) {
    switch(menuPage) {
        case 0: //Main menu
        if (menuSelected = 1) { //Start Game
            menuPage = 1; //Move to the Start game page
            menuSelected = 1; //Set selected to top option
        }
        if (menuSelected = 2) show_message("Options"); //Options
        if (menuSelected = 3) show_message("Instructions"); //Instructions
        if (menuSelected = 4) show_message("Quit Game"); //Quit Game
        break; //End of main menu
        
        case 1: //Start Game Submenu
      if (menuSelected = 1) show_message("Save 1"); //Save 1
      if (menuSelected = 2) show_message("Save 2"); //Save 2
      if (menuSelected = 3) { //Go back
        menuPage = 0; menuSelected = 1; 
      }
        break; //End of Game Submenu
    }
}
//End of selection of menu
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>font_size = 16; //Change this font size if you change the font. 

for (i = 1; i &lt;= menuText[menuPage,0]; i+=1) { //Cycles through the menus, menuText[0] = 4 so it will stop at menu 4.
    if (menuSelected = i) {
        draw_set_color(c_red); //If selected draw red
    } else {   
       draw_set_color(c_black); //Else draw black
    } 
    draw_text(x, y+(i*font_size)-font_size, menuText[menuPage,i]); //Draws the menu text
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
