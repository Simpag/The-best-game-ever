<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set state
state = states.idle;

//initialize variables
grav = 0.2;                         //Gravity amount
hsp = 0;                            //Set horizontal speed to 0, standing still.
vsp = 0;                            //Same as above but vertical
movespeed = 4;                      //Move speed
movedecrease = 0.9;                 //Move speed decrease on each frame
moveincrease = 0.3;                 //Move speed increase on each fram
facing = 1;                         //Variable to know which dir player is facing
melee_damage = 50;                  //Player damage / meele
power_up = false;                   //If the player has a power_up
hub_enter = 0;                      //If the player can enter a room     
idle = false;                       //To enter idel mode            

//Junmp vars
jumpspeed_normal = 6;               //Jump height on normal
jumpspeed_powerup = 8;              //Jump height when powered up

jumpspeed = jumpspeed_normal;       //I coded before with jumpspeed as the variable so dnt want to chnage the other code. 

wjumpsmax = 1;                      //maximum of wall jumps
wjumps = 0;                         //Set used wall jumps to 0
wjumpsd = 0;                        //Makes sure that the player wont jump twice on one wall
wjumpsd2 = 0;                       //For the ground objects

//Initiate Camera
instance_create(x, y, cont_view);

//Touch screen buttons
if ((os_type != os_windows) &amp;&amp; (os_type != os_macosx)) || (global.debug == true) scr_touch();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = states.idle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_player) {
    jumpspeed = jumpspeed_normal;
    sprite_index = spr_player;
    power_up = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (state) {
    case states.idle:
        scr_idle();
    break;
    
    case states.normal:
        scr_normal();
    break;
    
    case states.movement:
        scr_movement();
    break;
    
    case states.melee: 
        scr_melee();
    break;
    
}

if (global.debug == true) scr_debug();

//Enter a level
if (hub_enter != 0) &amp;&amp; (key_enter_hub) { //If hub enter and the key is pressed enter the hub
    room_goto(hub_enter);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change back to player sprite after melee animation
if (sprite_index == spr_player_melee) /*insert powerup sprite here*/ {
    sprite_index = spr_player;
    hsp = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
