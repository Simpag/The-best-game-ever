<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize variables
dir = -1; //Dir = direction
movespeed = 3;
grav = 0.2;
hsp = 0; //horizontal speed
vsp = 0; //vertical speed
foh = 0; //fear of heights
hit = 0; //If the enemy is hit or not
hp = 100; //Enemy hp
attack = 1; //If the enemy can attack or not
melee_damage = 20; //Melee damage of the enemy

image_speed = 0;
image_index = irandom(1)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attack = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = dir * movespeed;
vsp += grav;

//horizontal collision
if (place_meeting(x+hsp, y, obj_ground)){
    while(!place_meeting(x+sign(hsp), y, obj_ground)) {
        x += sign(hsp);
    }
    hsp = 0; 
    
    dir *= -1; //reverse direction   
}

//vertical collision
if (place_meeting(x, y + vsp, obj_ground)){
    while(!place_meeting(x, y + sign(vsp), obj_ground)) {
        y += sign(vsp);
    }
    vsp = 0;    
    
    if (foh) &amp;&amp; !position_meeting(x+(sprite_width/2)*dir, y+(sprite_height/2)+8, obj_ground) {
        dir *= -1;
    }   
}

x += hsp
y += vsp

//Enemy collision
if (hit == 1) {
    hp -= obj_player.melee_damage;
    hit = 0;
}

if (place_meeting(x, y, obj_player)) {
    if (attack == 1) {
        with (obj_player) {    
            hp -= obj_enemy.melee_damage;
            vsp = -5;
            hsp = sign(x - other.x) * 3;
        }
        attack = 0;
        alarm[0] = 2 * room_speed;
    }
}

if (hp &lt;= 0) {
    instance_destroy();
    {
        var i, dropRate //temp vars
        dropRate = irandom(4) + 1; //Set a random droprate
            for (i = 0; i &lt; dropRate; i++) { //creates and instace everytime i isnt equal to dropRate and adds 1 to i.
            instance_create(x, y, obj_coin);
            }
    }
}

/*if (place_meeting(x, y, obj_player)) {
    if (obj_player.y &lt; y-16) {
        with(obj_player) vsp = -jumpspeed;
            {
            var i, dropRate
            dropRate = irandom(4) + 1;
            for (i = 0; i &lt; dropRate; i++) {
            instance_create(x, y, obj_coin);
            }
        }
        instance_destroy();
    } else {
        scr_death();
        }
    } */
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///To draw itself and healthbar
draw_self();
draw_healthbar(x - 25,y - 35,x + 25,y - 30, hp, c_silver, c_red, c_green, 0, true, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
